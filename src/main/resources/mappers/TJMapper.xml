<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wolclass.mappers.TJMapper">
	<!-- 클래스 등록 -->
	<insert id="addClass">
		insert into wc_class (c_name, m_id, c_maxperson, c_addr1, c_addr2, c_addrdetails, c_lati, 
		c_longi, c_level, c_time, c_category, c_content, c_img, c_price, c_confirm, c_regdate)
		values(#{c_name}, #{m_id}, #{c_maxperson}, #{c_addr1}, #{c_addr2}, #{c_addrdetails}, #{c_lati}, #{c_longi}, 
		#{c_level}, #{c_time}, #{c_category}, #{c_content}, #{c_img}, #{c_price}, default, default)                         
	</insert>	
	<!-- 클래스 등록 -->
	
	<!-- 클래스 시간, 날짜 등록 -->
	<insert id="addTime">
		insert into wc_timetable (t_start, t_end, t_date, t_rem_p, c_no) 
		values( #{t_start}, #{t_end}, #{t_date}, #{t_rem_p}, #{c_no})
	</insert>
	<!-- 클래스 시간, 날짜 등록 -->
	
	<!-- 시간 등록 중복 검사 -->
	<select id="timeOverlapCheck" resultType="int">
		<![CDATA[ 
		select count(t_no)
		from wc_timetable
		where t_start < #{t_end}
		and t_end > #{t_start}
		and t_date=#{t_date} and c_no = #{c_no};
		]]>
	</select>
	<!-- 시간 등록 중복 검사 -->
	
	<!-- 등록 완료 클래스 리스트 -->
	<select id="registerClassList" resultType="ClassVO">
		select *
		from wc_class
		where m_id=#{m_id}
	</select>
	<!-- 등록 완료 클래스 리스트 -->

	<!-- 해당 키워드 리스트 출력 -->
	<select id="findByKeyword" resultType="ClassVO">
		select c.c_no, c.c_name, c.c_addr1, c.c_addr2, c.c_lati, c.c_longi, c.c_level, c.c_category, c.c_img, c.c_price, round(ifnull(r.score,0.0),1) score
		from wc_class c left join  (select c_no, avg(r_score) score, count(*) cnt from wc_reply group by c_no) r
        on c.c_no = r.c_no
		WHERE c_name REGEXP #{keyword} AND c_confirm = 'Y'
		ORDER BY c_regdate desc;
	</select>
	<!-- 해당 키워드 리스트 출력 -->
	
	<!-- 회원 정보 -->	
	<select id="getMemberInfo" resultType="MemberVO">
		select *
		from wc_member
		where m_id = #{m_id}
	</select>
	<!-- 회원 정보 -->	
	
	<!-- 카테고리별 리스트 출력 -->	
	<select id="getCategoryClassList" resultType="ClassVO">
		SELECT c.c_no, c.c_name, c.c_addr1, c.c_addr2, c.c_lati, c.c_longi, c.c_level, c.c_category, c.c_img, c.c_price, round(ifnull(r.score,0.0),1) score
		from wc_class c left join  (select c_no, avg(r_score) score, count(*) cnt from wc_reply group by c_no) r
        on c.c_no = r.c_no
		WHERE c_category IN (
		    SELECT DISTINCT c_category
		    FROM wc_class
		) AND c_confirm = 'Y'
		ORDER BY c_regdate desc
		
	</select>
	<!-- 카테고리별 리스트 출력 -->	

	<!-- 반려견 생일 7일전 -->	
	<select id="oneWeekBeforeBirth" resultType="int">
	SELECT count(m_dogbirth) 
	FROM wc_member 
	WHERE DATE_FORMAT(m_dogbirth, '%m-%d') BETWEEN DATE_FORMAT(NOW(), '%m-%d') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 7 DAY), '%m-%d') 
	AND m_id=#{m_id};
	</select>
	<!-- 반려견 생일 7일전 -->	
	
	<!-- 알림 목록 조회 -->
	<select id="getAlertList" resultType="AlertVO">
		select *
		from wc_alert
		where m_id = #{m_id} and a_check = 'N'
	</select>
	<!-- 알림 목록 조회 -->
	
	<!-- 알림 읽음 -->
	<update id="alertRead">
		update wc_alert
		set a_check = 'Y'
		where a_no = #{a_no}	
	</update>
	<!-- 알림 읽음 -->

	<!-- 알림 전체 읽음 -->
	<update id="alertReadAll">
		update wc_alert
		set a_check = 'Y'
		where m_id = #{m_id}
	</update>
	<!-- 알림 전체 읽음 -->
	
	<!-- 온라인 클래스 출력(주소 null) -->
	<select id="onlineClassList" resultType="ClassVO">
		select *
		from wc_class
		where c_addr1 = '' and c_confirm = 'Y'
		order by c_regdate desc
	</select>
	<!-- 온라인 클래스 출력(주소 null) -->
	
	

</mapper>	